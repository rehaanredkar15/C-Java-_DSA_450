    
       
        int left = 0;
        int maxright = 0;
        int maxleft = 0;
        int right = n-1;
        int res = 0;
        
        while(left<=right)
      {
          if(arr[left] <= arr[right])
          {
              
              if(arr[left] >= maxleft)
              {
              maxleft = arr[left];
              }
              else
              {
                  res = res + maxleft-arr[left];
                  
              }
              left++;
          }
          else
          {
             if(arr[right] >= maxright)
             {
                 maxright = arr[right];
                 
             }
             else
             {
                 res = res + maxright - arr[right];
             }
              right--;
          }
      }
      return res;
        
        
        
        
        
        
        brute force approach
        
        int n = a.length;
        int left[]= new int[n];
        int right[] = new int [n];
       
       left[0] = a[0];
       for(int i = 1;i<n;i++)
       {
       
          left[i] = Math.max(left[a-i],a[i]);
          }
       for(int i = n-2;i >= 0 ;i--)
       {
         right[i] = Math.max(right[i+1],a[i]);
         
         }
      int ans = 0;
      
      for(int i = 0;i<n;i++)
      {
       ans += (Math.min(left[i],right[i]) - a[i]);
       
       }
       
       return ans;
       }
